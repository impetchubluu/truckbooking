import 'package:flutter/material.dart';

class HistoryScreen extends StatefulWidget {
  const HistoryScreen({super.key});

  @override
  State<HistoryScreen> createState() => _HistoryScreenState();
}

class _HistoryScreenState extends State<HistoryScreen> {
  DateTime? _startDate;
  DateTime? _endDate;

  // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• mock (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏î‡πâ)
  int totalShipments = 132;
  int totalRounds = 7;
  int fourWheelCount = 60;
  int sixWheelCount = 45;
  int tenWheelCount = 27;
  String lastBookingDate = '15/07/2025';

  // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
  Future<void> _selectDateRange() async {
    final now = DateTime.now();
    final picked = await showDateRangePicker(
      context: context,
      firstDate: DateTime(now.year - 1),
      lastDate: now,
      initialDateRange: _startDate != null && _endDate != null
          ? DateTimeRange(start: _startDate!, end: _endDate!)
          : null,
    );

    if (picked != null) {
      setState(() {
        _startDate = picked.start;
        _endDate = picked.end;

        // üëâ ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å backend
        // fetchDataByDateRange(_startDate, _endDate);
      });
    }
  }

  String _formatDate(DateTime date) {
    return '${date.day.toString().padLeft(2, '0')}/'
        '${date.month.toString().padLeft(2, '0')}/'
        '${date.year}';
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏à‡∏≠‡∏á')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: ListView(
          children: [
            // üîò ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Expanded(
                  child: Text(
                    _startDate != null && _endDate != null
                        ? '‡∏ä‡πà‡∏ß‡∏á: ${_formatDate(_startDate!)} - ${_formatDate(_endDate!)}'
                        : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà',
                    style: const TextStyle(fontSize: 16),
                  ),
                ),
                OutlinedButton.icon(
                  onPressed: _selectDateRange,
                  icon: const Icon(Icons.calendar_today),
                  label: const Text('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'),
                ),
              ],
            ),
            const SizedBox(height: 16),

            // üîù ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô)
            _buildSummaryCard(
              title: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î',
              value: lastBookingDate,
              icon: Icons.calendar_today,
              color: Colors.grey.shade200,
            ),

            const SizedBox(height: 20),
            const Text('‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•',
                style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
            const SizedBox(height: 16),

            _buildSummaryCard(
              title: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Shipment ‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß',
              value: '$totalShipments ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
              icon: Icons.local_shipping,
              color: Colors.green.shade100,
            ),
            const SizedBox(height: 12),

            _buildSummaryCard(
              title: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á',
              value: '$totalRounds ‡∏£‡∏≠‡∏ö',
              icon: Icons.sync_alt_rounded,
              color: Colors.blue.shade100,
            ),

            const SizedBox(height: 20),
            const Text('‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ:',
                style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
            const SizedBox(height: 8),

            _buildSummaryCard(
              title: '‡∏£‡∏ñ 4 ‡∏•‡πâ‡∏≠',
              value: '$fourWheelCount ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
              icon: Icons.fire_truck_outlined,
              color: Colors.orange.shade100,
            ),
            const SizedBox(height: 8),

            _buildSummaryCard(
              title: '‡∏£‡∏ñ 6 ‡∏•‡πâ‡∏≠',
              value: '$sixWheelCount ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
              icon: Icons.fire_truck_rounded,
              color: Colors.purple.shade100,
            ),
            const SizedBox(height: 8),

            _buildSummaryCard(
              title: '‡∏£‡∏ñ 10 ‡∏•‡πâ‡∏≠',
              value: '$tenWheelCount ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
              icon: Icons.fire_truck,
              color: Colors.red.shade100,
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildSummaryCard({
    required String title,
    required String value,
    required IconData icon,
    required Color color,
  }) {
    return Card(
      color: color,
      elevation: 2,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      child: ListTile(
        leading: Icon(icon, size: 32),
        title: Text(title, style: const TextStyle(fontWeight: FontWeight.bold)),
        subtitle: Text(value, style: const TextStyle(fontSize: 16)),
      ),
    );
  }
}
